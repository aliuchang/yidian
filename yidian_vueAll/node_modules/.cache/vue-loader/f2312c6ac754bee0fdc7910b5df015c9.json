{"remainingRequest":"C:\\Users\\sha15\\Desktop\\yidian\\yidian_vueAll\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sha15\\Desktop\\yidian\\yidian_vueAll\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\sha15\\Desktop\\yidian\\yidian_vueAll\\src\\views\\Register.vue","mtime":1561424812051},{"path":"C:\\Users\\sha15\\Desktop\\yidian\\yidian_vueAll\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sha15\\Desktop\\yidian\\yidian_vueAll\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\sha15\\Desktop\\yidian\\yidian_vueAll\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sha15\\Desktop\\yidian\\yidian_vueAll\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      numberValidateForm: {\r\n        name: \"\",\r\n        pass: \"\",\r\n        sendcode: \"\",\r\n      },\r\n    disabled: false,\r\n    time: 0,\r\n    btntxt: \"重新发送\",\r\n    };\r\n  },\r\n  methods: {\r\n    sendcode() {\r\n    const reg = 11 && /^((13|14|15|17|18)[0-9]{1}\\d{8})$/\r\n      if (!reg.test(this.numberValidateForm.name)) {\r\n        this.$message({\r\n          message: \"请输入正确的手机号\",\r\n          center: true\r\n        });\r\n        return;\r\n      } else {\r\n        this.$message({\r\n          message: \"发送成功\",\r\n          type: \"success\",\r\n          center: true\r\n        });\r\n        this.time = 60;\r\n        this.disabled = true;\r\n        this.timer();\r\n      }\r\n    },\r\n    //60S倒计时\r\n    timer() {\r\n      if (this.time > 0) {\r\n        this.time--;\r\n        this.btntxt = this.time + \"s后重新获取\";\r\n        setTimeout(this.timer, 1000);\r\n      } else {\r\n        this.time = 0;\r\n        this.btntxt = \"获取验证码\";\r\n        this.disabled = false;\r\n      }\r\n    },\r\n\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {                                                                                                                                         //  this.$axios.get('api/login/')\r\n          // web后台接收formData，这里是json,后来不用json了，直接就是data\r\n          let data = new FormData();\r\n\r\n          // console.log(document.cookie)  // 用正则切出来\r\n          // let reg = /csrftoken=([\\w]+[;]?)/g;\r\n          // 直接匹配字符串\r\n          // console.log(reg.exec(document.cookie))\r\n          // 在http里加一个内容让后台可以接收到，cookie，这样才能做到跨域的验证 用做好的在博客上。\r\n\r\n          //data添加一些数据,username从当前的numberValidateForm中来\r\n          data.append('username',this.numberValidateForm.name);\r\n          data.append('password',this.numberValidateForm.pass);\r\n\r\n          this.$axios.post('api/register/',data).then((res)=>{\r\n            // console.log(res)\r\n            // console.log(typeof res)\r\n            if(res.data.code == \"ok\"){\r\n              this.$router.push({ name: \"login\" });\r\n            }else {\r\n              console.log(\"error\")\r\n            }\r\n          });\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    login() {\r\n      this.$router.push({ name: \"login\" });\r\n    },\r\n    loginn() {\r\n      this.$router.push({ name: \"login\" });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <el-container>\r\n    <el-main>\r\n      <div class=\"login-box\">\r\n        <img class=\"back\" src=\"../assets/index/login.png\" alt>\r\n        <div class=\"login\">\r\n          <div class=\"login-header\">\r\n            <img class=\"login-he\" src=\"../assets/index/register.png\" alt>\r\n          </div>\r\n          <div class=\"form-box\">\r\n            <el-form\r\n              :model=\"numberValidateForm\"\r\n              status-icon\r\n              ref=\"numberValidateForm\"\r\n              class=\"demo-ruleForm\"\r\n            >\r\n              <el-form-item\r\n                prop=\"name\"\r\n                :rules=\"[\r\n            { required: true, message: '账号不能为空'},\r\n\r\n          ]\"\r\n              >\r\n                <el-input\r\n                  type=\"text\"\r\n                  v-model.number=\"numberValidateForm.name\"\r\n                  placeholder=\"手机号/账号/邮箱\"\r\n                  class=\"text1\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item prop=\"验证码\" class=\"code\">\r\n                <el-input class=\"send-left\" v-model=\"numberValidateForm.sendcode\" placeholder=\"请输入验证码\"></el-input>\r\n                <el-button class=\"send-right\" type=\"button\" @click=\"sendcode\" :disabled=\"disabled\" v-if=\"disabled==false\">发送验证码\r\n                </el-button>\r\n                <el-button type=\"button\" @click=\"sendcode\" :disabled=\"disabled\" v-if=\"disabled==true\">{{btntxt}}\r\n                </el-button>\r\n            </el-form-item>\r\n              <el-form-item\r\n                prop=\"pass\"\r\n                :rules=\"[\r\n            { required: true, message: '密码不能为空'},\r\n          ]\"\r\n              >\r\n                <el-input\r\n                  type=\"password\"\r\n                  v-model.number=\"numberValidateForm.pass\"\r\n                  autocomplete=\"off\"\r\n                  placeholder=\"密码\"\r\n                  class=\"text1\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item class=\"addel\">\r\n                <span @click=\"login\">请登录</span>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button\r\n                  type=\"primary\"\r\n                  @click=\"submitForm('numberValidateForm')\"\r\n                  class=\"loginn\"\r\n                >立即注册</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      numberValidateForm: {\r\n        name: \"\",\r\n        pass: \"\",\r\n        sendcode: \"\",\r\n      },\r\n    disabled: false,\r\n    time: 0,\r\n    btntxt: \"重新发送\",\r\n    };\r\n  },\r\n  methods: {\r\n    sendcode() {\r\n    const reg = 11 && /^((13|14|15|17|18)[0-9]{1}\\d{8})$/\r\n      if (!reg.test(this.numberValidateForm.name)) {\r\n        this.$message({\r\n          message: \"请输入正确的手机号\",\r\n          center: true\r\n        });\r\n        return;\r\n      } else {\r\n        this.$message({\r\n          message: \"发送成功\",\r\n          type: \"success\",\r\n          center: true\r\n        });\r\n        this.time = 60;\r\n        this.disabled = true;\r\n        this.timer();\r\n      }\r\n    },\r\n    //60S倒计时\r\n    timer() {\r\n      if (this.time > 0) {\r\n        this.time--;\r\n        this.btntxt = this.time + \"s后重新获取\";\r\n        setTimeout(this.timer, 1000);\r\n      } else {\r\n        this.time = 0;\r\n        this.btntxt = \"获取验证码\";\r\n        this.disabled = false;\r\n      }\r\n    },\r\n\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {                                                                                                                                         //  this.$axios.get('api/login/')\r\n          // web后台接收formData，这里是json,后来不用json了，直接就是data\r\n          let data = new FormData();\r\n\r\n          // console.log(document.cookie)  // 用正则切出来\r\n          // let reg = /csrftoken=([\\w]+[;]?)/g;\r\n          // 直接匹配字符串\r\n          // console.log(reg.exec(document.cookie))\r\n          // 在http里加一个内容让后台可以接收到，cookie，这样才能做到跨域的验证 用做好的在博客上。\r\n\r\n          //data添加一些数据,username从当前的numberValidateForm中来\r\n          data.append('username',this.numberValidateForm.name);\r\n          data.append('password',this.numberValidateForm.pass);\r\n\r\n          this.$axios.post('api/register/',data).then((res)=>{\r\n            // console.log(res)\r\n            // console.log(typeof res)\r\n            if(res.data.code == \"ok\"){\r\n              this.$router.push({ name: \"login\" });\r\n            }else {\r\n              console.log(\"error\")\r\n            }\r\n          });\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    login() {\r\n      this.$router.push({ name: \"login\" });\r\n    },\r\n    loginn() {\r\n      this.$router.push({ name: \"login\" });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style>\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.el-header,\r\n.el-footer {\r\n  background-color: #b3c0d1;\r\n  color: #333;\r\n  text-align: center;\r\n  line-height: 60px;\r\n}\r\n.el-main {\r\n  width: 100%;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n}\r\n.el-main .login-box {\r\n  width: 100%;\r\n  height: 645px;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n}\r\n.el-main .login-box .back {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  margin: auto;\r\n}\r\n.login {\r\n  width: 377px;\r\n  height: 464px;\r\n  background: #ffffff;\r\n  box-shadow: 4px 3px 16px 0px#cacaca;\r\n  position: absolute;\r\n  top: 90px;\r\n  right: 15%;\r\n}\r\n.login .login-header {\r\n  width: 214px;\r\n  height: 40px;\r\n  margin: auto;\r\n  margin-top: 50px;\r\n}\r\n.login .login-header .login-he {\r\n  height: 100%;\r\n  margin: auto;\r\n}\r\n.form-box {\r\n  width: 282px;\r\n  height: 324px;\r\n  margin: auto;\r\n  margin-top: 53px;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n.form-box .send-left{\r\n    width: 50%;\r\n    float: left;\r\n}\r\n.form-box .send-right{\r\n    width: 40%;\r\n    float: right;\r\n}\r\n.el-form-item__label {\r\n  width: 50px;\r\n}\r\n.form-box .addel {\r\n  margin-top: -15px;\r\n}\r\n.form-box .addel span {\r\n  color: #000000;\r\n  opacity: 0.6;\r\n  cursor: pointer;\r\n  float: left;\r\n}\r\n\r\n.form-box .loginn {\r\n  width: 100%;\r\n  background-color: #7d7d7d;\r\n  box-shadow: 0px 3px 5px 0px rgba(195, 195, 195, 0.74);\r\n  color: #ffffff;\r\n  opacity: 0.8;\r\n  letter-spacing: 2px;\r\n}\r\n</style>\r\n"]}]}